{"version":3,"file":"export.js","sourceRoot":"","sources":["../src/export.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from \"path\";\nimport * as fs from \"fs\";\nimport { Workbook, Worksheet } from \"exceljs\";\nimport { removeDuplicates } from \"./helpers\";\nimport { separator } from \"./constants\";\n\n\n\nfunction setTranslationData(translationObj: any, translations: any, lang: string): void {\n    Object.entries(translations).forEach(([langKey, trans]) => {\n        translationObj[langKey] = translationObj[langKey] || {};\n\n        if (trans && typeof trans === \"object\") {\n            translationObj[langKey].nested = true;\n            setTranslationData(translationObj[langKey], trans, lang)\n        } else {\n            translationObj[langKey] = {\n                ...translationObj[langKey],\n                [lang]: trans,\n            }\n        }\n    })\n}\n\nfunction getTranslationData(data: any): any {\n    let translationData = {};\n\n    Object.entries(data).forEach(([lang, translations]) => {\n        setTranslationData(translationData, translations, lang);\n    });\n\n    return translationData;\n}\n\n\nfunction worksheetAddRow(value: any, key: string | null, worksheet: Worksheet) {\n    delete value.nested;\n\n    Object.entries(value).forEach(([nestedKey, nestedValue]: [string, any]) => {\n        const newKey = key ? `${key}${separator}${nestedKey}` : nestedKey;\n        if (nestedValue.nested) {\n            worksheetAddRow(nestedValue, newKey, worksheet);\n        } else {\n            worksheet.addRow({\n                key: newKey,\n                ...nestedValue,\n            });\n        }\n    });\n}\n\n\nexport default function (outputPath: string, translationsPath: string): void {\n    const workbook = new Workbook()\n    // todo: get creator from config or package.json\n    workbook.creator = 'i18next-manager'\n    workbook.created = new Date()\n\n    const languages: string[] = fs.readdirSync(translationsPath)\n\n    const allFiles = languages.reduce((acc: string[], lang: string) => ([\n        ...acc,\n        ...fs.readdirSync(path.join(translationsPath, lang)),\n    ]), [])\n    const files = removeDuplicates<string>(allFiles).sort()\n\n\n    files.forEach((file: string) => {\n        const worksheet = workbook.addWorksheet(file, {views:[{state: 'frozen', xSplit: 1, ySplit: 1}]});\n        const langData: any = {};\n\n        const columns = [\n            { header: 'Key', key: 'key', width: 50 },\n        ];\n\n        languages.forEach(lang => {\n            columns.push({ header: lang, key: lang, width: 65 });\n\n            const rawJsonData = fs.readFileSync(path.join(translationsPath, lang, file), 'utf8');\n            langData[lang] = JSON.parse(rawJsonData);\n        });\n\n        worksheet.columns = columns;\n\n        const translationData = getTranslationData(langData);\n\n        worksheetAddRow(translationData, null, worksheet);\n    });\n\n\n    workbook.xlsx.writeFile(outputPath)\n        .then(workbook => {\n            // use workbook\n            console.log(workbook);\n        });\n}\n"]}