{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/helpers.ts"],"names":[],"mappings":";;AAEA,SAAS,UAAU,CAAC,OAAe;IAC/B,OAAO,CAAC,KAAK,CAAC,UAAU,OAAO,EAAE,CAAC,CAAA;IAClC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACnB,CAAC;AAED,SAAgB,MAAM,CAAC,GAAQ,EAAE,OAAc,EAAE,KAAU;IACvD,IAAI,YAAY,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAG,CAAC,EAAE;QACpC,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,EAAC;YACd,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;SAChB;QACD,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAClB;IAED,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,CAAC;AACvC,CAAC;AAZD,wBAYC;AAED,SAAgB,gBAAgB,CAAI,KAAU;IAC1C,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;AACrC,CAAC;AAFD,4CAEC;AAED,SAAgB,eAAe,CAAC,OAAwB;IACpD,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACpC,UAAU,CAAC,+BAA+B,CAAC,CAAA;KAC9C;IACD,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;QAClC,UAAU,CAAC,qCAAqC,CAAC,CAAA;KACpD;IACD,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;QACvB,UAAU,CAAC,0CAA0C,CAAC,CAAA;KACzD;IACD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACjB,UAAU,CAAC,sCAAsC,CAAC,CAAA;KACrD;AACL,CAAC;AAbD,0CAaC","sourcesContent":["import { CommanderStatic } from \"commander\"\r\n\r\nfunction throwError(message: string) {\r\n    console.error(`Error: ${message}`)\r\n    process.exit(1)\r\n}\r\n\r\nexport function assign(obj: any, keyPath: any[], value: any): void {\r\n    let lastKeyIndex = keyPath.length - 1;\r\n\r\n    for (let i = 0; i < lastKeyIndex; ++ i) {\r\n        let key = keyPath[i];\r\n        if (!(key in obj)){\r\n            obj[key] = {}\r\n        }\r\n        obj = obj[key];\r\n    }\r\n\r\n    obj[keyPath[lastKeyIndex]] = value;\r\n}\r\n\r\nexport function removeDuplicates<T>(array: T[]): T[] {\r\n    return Array.from(new Set(array))\r\n}\r\n\r\nexport function programValidate(program: CommanderStatic): void {\r\n    if (!program.import && !program.export) {\r\n        throwError('Import/Export command missing')\r\n    }\r\n    if (program.import && program.export) {\r\n        throwError(\"Can't choose both Import and Export\")\r\n    }\r\n    if (!program.translations) {\r\n        throwError('Path to translation directory is missing')\r\n    }\r\n    if (!program.output) {\r\n        throwError('Path to output excel file is missing')\r\n    }\r\n}\r\n"]}