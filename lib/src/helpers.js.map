{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/helpers.ts"],"names":[],"mappings":";;AACA,SAAgB,MAAM,CAAC,GAAQ,EAAE,OAAc,EAAE,KAAU;IACvD,IAAI,YAAY,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,EAAG,CAAC,EAAE;QACpC,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,EAAC;YACd,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;SAChB;QACD,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KAClB;IAED,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,GAAG,KAAK,CAAC;AACvC,CAAC;AAZD,wBAYC;AAED,SAAgB,gBAAgB,CAAI,KAAU;IAC1C,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;AACrC,CAAC;AAFD,4CAEC","sourcesContent":["\nexport function assign(obj: any, keyPath: any[], value: any): void {\n    let lastKeyIndex = keyPath.length - 1;\n\n    for (let i = 0; i < lastKeyIndex; ++ i) {\n        let key = keyPath[i];\n        if (!(key in obj)){\n            obj[key] = {}\n        }\n        obj = obj[key];\n    }\n\n    obj[keyPath[lastKeyIndex]] = value;\n}\n\nexport function removeDuplicates<T>(array: T[]): T[] {\n    return Array.from(new Set(array))\n}\n"]}