{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../src/helpers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,2CAA4B;AAE5B,sDAA6B;AAE7B,SAAS,UAAU,CAAC,OAAe;IAC/B,OAAO,CAAC,KAAK,CAAC,UAAU,OAAO,EAAE,CAAC,CAAA;IAClC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACnB,CAAC;AAED,SAAgB,YAAY,CAAI,MAAS;IACrC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI,CAAA;AACpD,CAAC;AAFD,oCAEC;AAED;;;;GAIG;AACH,SAAsB,eAAe,CAAC,OAAwB;;QAC1D,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACpC,UAAU,CAAC,+BAA+B,CAAC,CAAA;SAC9C;QACD,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;YAClC,UAAU,CAAC,qCAAqC,CAAC,CAAA;SACpD;QAED,wDAAwD;QACxD,IAAI,CAAC,iBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,oBAAoB,CAAC,EAAE;YACnD,UAAU,CAAC,iCAAiC,CAAC,CAAA;SAChD;QAED,kDAAkD;QAClD,IAAI,CAAC,iBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,eAAe,CAAC,EAAE;YAC9C,IAAI,OAAO,CAAC,MAAM,EAAE;gBAChB,mDAAmD;gBACnD,kBAAkB;gBAClB,UAAU,CAAC,0BAA0B,CAAC,CAAA;aACzC;iBAAM;gBACH,0CAA0C;gBAC1C,6BAA6B;gBAC7B,MAAM,iBAAO,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAA;aACnE;SACJ;IACL,CAAC;CAAA;AAzBD,0CAyBC","sourcesContent":["import * as path from \"path\"\r\nimport { CommanderStatic } from \"commander\"\r\nimport shelljs from \"shelljs\"\r\n\r\nfunction throwError(message: string): void {\r\n    console.error(`Error: ${message}`)\r\n    process.exit(1)\r\n}\r\n\r\nexport function prettifyJson<T>(object: T): string {\r\n    return JSON.stringify(object, null, \"\\t\") + \"\\n\"\r\n}\r\n\r\n/**\r\n * Validate input options\r\n * if not valid exit with code 1\r\n * @param {CommanderStatic} program\r\n */\r\nexport async function programValidate(program: CommanderStatic): Promise<void> {\r\n    if (!program.import && !program.export) {\r\n        throwError('Import/Export command missing')\r\n    }\r\n    if (program.import && program.export) {\r\n        throwError(\"Can't choose both Import and Export\")\r\n    }\r\n\r\n    // Check if path exist for translation-assets-dir option\r\n    if (!shelljs.test('-e', program.translationAssetsDir)) {\r\n        throwError(\"Wrong path to locales directory\")\r\n    }\r\n\r\n    // Check if path exist for translation-file option\r\n    if (!shelljs.test('-e', program.translationFile)) {\r\n        if (program.import) {\r\n            // throw an error if we want to import translations\r\n            // from excel file\r\n            throwError(\"Wrong path to excel file\")\r\n        } else {\r\n            // create directories if we want to export\r\n            // translations to excel file\r\n            await shelljs.mkdir('-p', path.dirname(program.translationFile))\r\n        }\r\n    }\r\n}\r\n"]}